<%- include('../../partials/layout-protected-top', { title: __('admin_tools__title') }) %>

<div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-6"><%= __('admin_tools__heading') %></h1>

    <!-- Add New Tool Button -->
    <div class="mb-6">
        <button id="addToolBtn" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
            <%= __('admin_tools__add_new') %>
        </button>
    </div>

    <!-- Tools List -->
    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <table class="min-w-full leading-normal">
            <thead>
                <tr>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        <%= __('admin_tools__name') %>
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        <%= __('admin_tools__description') %>
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        <%= __('admin_tools__render_mode') %>
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        <%= __('admin_tools__pricing_plans') %>
                    </th>
                    <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        <%= __('admin_tools__actions') %>
                    </th>
                </tr>
            </thead>
            <tbody>
                <% tools.forEach(tool => { %>
                    <tr>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <%= tool.name %>
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <%= tool.description %>
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <%= tool.renderMode %>
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <%= tool.pricingPlans.map(plan => plan.name).join(', ') %>
                        </td>
                        <td class="px-5 py-5 border-b border-gray-200 bg-white text-sm">
                            <button class="editToolBtn bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-1 px-2 rounded mr-2" data-tool-id="<%= tool._id %>">
                                <%= __('admin_tools__edit') %>
                            </button>
                            <button class="deleteToolBtn bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-2 rounded" data-tool-id="<%= tool._id %>">
                                <%= __('admin_tools__delete') %>
                            </button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>

<!-- Add/Edit Tool Modal -->
<div id="toolModal" class="fixed z-10 inset-0 overflow-y-auto hidden">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 transition-opacity" aria-hidden="true">
            <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
        </div>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <form id="toolForm">
                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <h3 class="text-lg leading-6 font-medium text-gray-900" id="modalTitle"><%= __('admin_tools__add_new') %></h3>
                    <div class="mt-2">
                        <input type="hidden" id="toolId">
                        <div class="mb-4">
                            <label for="name" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__name') %>:</label>
                            <input type="text" id="name" name="name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                        </div>
                        <div class="mb-4">
                            <label for="description" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__description') %>:</label>
                            <textarea id="description" name="description" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required></textarea>
                        </div>
                        <div class="mb-4">
                            <label for="renderMode" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__render_mode') %>:</label>
                            <select id="renderMode" name="renderMode" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                                <option value="inline"><%= __('admin_tools__inline') %></option>
                                <option value="external"><%= __('admin_tools__external') %></option>
                                <option value="download"><%= __('admin_tools__download') %></option>
                            </select>
                        </div>
                        <div id="contentField" class="mb-4">
                            <label for="content" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__content') %>:</label>
                            <textarea id="content" name="content" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"></textarea>
                        </div>
                        <div id="externalUrlField" class="mb-4 hidden">
                            <label for="externalUrl" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__external_url') %>:</label>
                            <input type="url" id="externalUrl" name="externalUrl" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                        </div>
                        <div id="downloadUrlField" class="mb-4 hidden">
                            <label for="downloadUrl" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__download_url') %>:</label>
                            <input type="url" id="downloadUrl" name="downloadUrl" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                        </div>
                        <div class="mb-4">
                            <label for="pricingPlans" class="block text-gray-700 text-sm font-bold mb-2"><%= __('admin_tools__pricing_plans') %>:</label>
                            <select id="pricingPlans" name="pricingPlans" multiple class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" required>
                                <% allPricingPlans.forEach(plan => { %>
                                    <option value="<%= plan._id %>"><%= plan.name %></option>
                                <% }); %>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                    <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                        <%= __('admin_tools__save') %>
                    </button>
                    <button type="button" id="cancelBtn" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        <%= __('admin_tools__cancel') %>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const addToolBtn = document.getElementById('addToolBtn');
        const toolModal = document.getElementById('toolModal');
        const toolForm = document.getElementById('toolForm');
        const cancelBtn = document.getElementById('cancelBtn');
        const renderModeSelect = document.getElementById('renderMode');
        const contentField = document.getElementById('contentField');
        const externalUrlField = document.getElementById('externalUrlField');
        const downloadUrlField = document.getElementById('downloadUrlField');

        addToolBtn.addEventListener('click', () => {
            document.getElementById('modalTitle').textContent = '<%= __('admin_tools__add_new') %>';
            toolForm.reset();
            toolModal.classList.remove('hidden');
        });

        cancelBtn.addEventListener('click', () => {
            toolModal.classList.add('hidden');
        });

        renderModeSelect.addEventListener('change', updateFields);

        function updateFields() {
            const renderMode = renderModeSelect.value;
            contentField.classList.toggle('hidden', renderMode !== 'inline');
            externalUrlField.classList.toggle('hidden', renderMode !== 'external');
            downloadUrlField.classList.toggle('hidden', renderMode !== 'download');
        }

        toolForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(toolForm);
            const toolId = document.getElementById('toolId').value;
            const method = toolId ? 'PUT' : 'POST';
            const url = toolId ? `/api/tools/${toolId}` : '/api/tools';

            // Convert pricingPlans to an array
            const pricingPlans = Array.from(formData.getAll('pricingPlans'));
            formData.delete('pricingPlans');
            formData.append('pricingPlans', JSON.stringify(pricingPlans));

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(Object.fromEntries(formData)),
                });

                if (response.ok) {
                    toolModal.classList.add('hidden');
                    location.reload();
                } else {
                    console.error('<%= __('admin_tools__save_error') %>');
                }
            } catch (error) {
                console.error('<%= __('admin_tools__error') %>:', error);
            }
        });

        document.querySelectorAll('.editToolBtn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const toolId = btn.dataset.toolId;
                const response = await fetch(`/api/tools/${toolId}`);
                const tool = await response.json();
                
                document.getElementById('modalTitle').textContent = '<%= __('admin_tools__edit') %>';
                document.getElementById('toolId').value = tool._id;
                document.getElementById('name').value = tool.name;
                document.getElementById('description').value = tool.description;
                document.getElementById('renderMode').value = tool.renderMode;
                document.getElementById('content').value = tool.content || '';
                document.getElementById('externalUrl').value = tool.externalUrl || '';
                document.getElementById('downloadUrl').value = tool.downloadUrl || '';
                
                // Set selected pricing plans
                const pricingPlansSelect = document.getElementById('pricingPlans');
                Array.from(pricingPlansSelect.options).forEach(option => {
                    option.selected = tool.pricingPlans.includes(option.value);
                });

                updateFields();
                toolModal.classList.remove('hidden');
            });
        });

        document.querySelectorAll('.deleteToolBtn').forEach(btn => {
            btn.addEventListener('click', async () => {
                if (confirm('<%= __('admin_tools__delete_confirm') %>')) {
                    const toolId = btn.dataset.toolId;
                    try {
                        const response = await fetch(`/api/tools/${toolId}`, {
                            method: 'DELETE',
                        });

                        if (response.ok) {
                            location.reload();
                        } else {
                            console.error('<%= __('admin_tools__delete_error') %>');
                        }
                    } catch (error) {
                        console.error('<%= __('admin_tools__error') %>:', error);
                    }
                }
            });
        });
    });
</script>

<%- include('../../partials/layout-public-bottom') %>
